apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector

metadata:
  name: opentelemetry-collector

spec:
  config:
    receivers:
      haproxy:
        endpoint: http://haproxy-kubernetes-ingress.haproxy-controller.svc.materia-cluster.ggrel.net:1024/stats
      nginx:
        endpoint: http://service.nginx.svc.materia-cluster.ggrel.net:81
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      podman_stats:
        endpoint: unix://run/podman/podman.sock
      prometheus:
        config:
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: apcupsd-exporter
              static_configs:
                - targets:
                    - service.apcupsd-exporter.svc.materia-cluster.ggrel.net:9162
            - job_name: blackbox/ping_bbix-4over6-v4
              scrape_interval: 1m
              metrics_path: /probe
              params:
                module: [ping_bbix-4over6-v4]
              static_configs:
                - targets:
                    - 172.16.10.1
                    - 1.1.1.1
                    - 8.8.8.8
                    - ping-e.sinet.ad.jp
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: nitrogen.dns.ggrel.net:9115
                - target_label: network
                  replacement: bbix-4over6-v4
            - job_name: blackbox/ping_bbix-pppoe-v4
              scrape_interval: 1m
              metrics_path: /probe
              params:
                module: [ping_bbix-pppoe-v4]
              static_configs:
                - targets:
                    - 172.16.10.1
                    - 1.1.1.1
                    - 8.8.8.8
                    - ping-e.sinet.ad.jp
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: nitrogen.dns.ggrel.net:9115
                - source_labels: [__param_module]
                  target_label: module
                - target_label: network
                  replacement: bbix-pppoe-v4
            - job_name: blackbox/ping_mobile-v4
              scrape_interval: 1m
              metrics_path: /probe
              params:
                module: [ping_mobile-v4]
              static_configs:
                - targets:
                    - 172.16.10.1
                    - 1.1.1.1
                    - 8.8.8.8
                    - ping-e.sinet.ad.jp
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: nitrogen.dns.ggrel.net:9115
                - source_labels: [__param_module]
                  target_label: module
                - target_label: network
                  replacement: mobile-v4
            - job_name: blackbox/ping_itscom-v4
              scrape_interval: 1m
              metrics_path: /probe
              params:
                module: [ping_itscom-v4]
              static_configs:
                - targets:
                    - 172.16.10.1
                    - 1.1.1.1
                    - 8.8.8.8
                    - ping-e.sinet.ad.jp
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: nitrogen.dns.ggrel.net:9115
                - source_labels: [__param_module]
                  target_label: module
                - target_label: network
                  replacement: itscom-v4
            - job_name: blackbox_exporter
              static_configs:
                - targets:
                    - nitrogen.dns.ggrel.net:9115
            - job_name: cert-manager
              static_configs:
                - targets:
                    - cert-manager.cert-manager.svc.materia-cluster.ggrel.net:9402
            - job_name: elasticsearch
              static_configs:
                - targets:
                    - service.elasticsearch-exporter.svc.materia-cluster.ggrel.net:9114
            - job_name: haproxy-metrics
              static_configs:
                - targets:
                    - haproxy-kubernetes-ingress.haproxy-controller.svc.materia-cluster.ggrel.net:1024
            - job_name: intel-igpu
              static_configs:
                - targets:
                    - haruka.dns.ggrel.net:8080
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels:
                    [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels:
                    [
                      __address__,
                      __meta_kubernetes_pod_annotation_prometheus_io_port,
                    ]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: ${1}:${2}
                  target_label: __address__
            - job_name: litestream
              static_configs:
                - targets:
                    - boron.dns.ggrel.net:9090
            - job_name: otelcol
              static_configs:
                - targets: [0.0.0.0:8888]
              metric_relabel_configs:
                - source_labels: [__name__]
                  regex: ".*grpc_io.*"
                  action: drop
            - job_name: snmp
              static_configs:
                - targets:
                    - "172.16.2.1"
              metrics_path: /snmp
              params:
                auth: [public_v2]
                module: [if_mib, nec_ix]
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: service.snmp-exporter.svc.materia-cluster.ggrel.net:9116
            - job_name: snmp_exporter
              static_configs:
                - targets:
                    - service.snmp-exporter.svc.materia-cluster.ggrel.net:9116
            - job_name: postgres
              static_configs:
                - targets:
                    - service.postgres-exporter.svc.materia-cluster.ggrel.net:9187
            - job_name: prometheus
              static_configs:
                - targets:
                    - service.prometheus.svc.materia-cluster.ggrel.net:9090
            - job_name: switchbot-meter
              scrape_interval: 1m
              metrics_path: /probe
              static_configs:
                - targets:
                    - CED37C9CA281
                    - D4DF46B693B1
                    - ED867D5919E9
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: service.switchbot-meter-exporter.svc.materia-cluster.ggrel.net:8888
      redis/argocd:
        endpoint: argocd-redis.argocd.svc.materia-cluster.ggrel.net:6379
        password: ${env:ARGOCD_REDIS_PASSWORD}
      redis/mastodon:
        endpoint: redis.mastodon.svc.materia-cluster.ggrel.net:6379

    processors:
      batch:
        timeout: 5s
      batch/mackerel:
        send_batch_max_size: 7500
        send_batch_size: 7500
        timeout: 5s
      batch/vaxila:
        send_batch_max_size: 5000
        send_batch_size: 5000
        timeout: 1m
      resource/haproxy:
        attributes:
          - key: service.name
            value: haproxy
            action: insert
      resource/nginx:
        attributes:
          - key: service.name
            value: nginx
            action: insert
      resource/podman_stats:
        attributes:
          - key: service.name
            value: podman_stats
            action: insert
      resource/redis/argocd:
        attributes:
          - key: service.name
            value: redis
            action: insert
          - key: service.namespace
            value: argocd
            action: insert
      resource/redis/mastodon:
        attributes:
          - key: service.name
            value: redis
            action: insert
          - key: service.namespace
            value: mastodon
            action: insert

    exporters:
      debug:
        verbosity: detailed
      otlp/mackerel:
        endpoint: otlp.mackerelio.com:4317
        compression: gzip
        headers:
          Mackerel-Api-Key: ${env:MACKEREL_APIKEY}
      otlphttp/vaxila:
        endpoint: https://otlp-vaxila.mackerelio.com
        headers:
          Accept: "*/*"
          Mackerel-Api-Key: ${env:VAXILA_APIKEY}
      prometheusremotewrite:
        endpoint: http://service.prometheus.svc.materia-cluster.ggrel.net:9090/api/v1/write
        add_metric_suffixes: false
        resource_to_telemetry_conversion:
          enabled: true

    service:
      telemetry:
        metrics:
          address: :8888
          level: detailed
      pipelines:
        metrics:
          receivers: [otlp, prometheus]
          processors: [batch]
          exporters: [prometheusremotewrite]
        metrics/haproxy:
          receivers: [haproxy]
          processors: [resource/haproxy, batch]
          exporters: [prometheusremotewrite]
        metrics/nginx:
          receivers: [nginx]
          processors: [resource/nginx, batch]
          exporters: [prometheusremotewrite]
        metrics/podman_stats:
          receivers: [podman_stats]
          processors: [resource/podman_stats, batch]
          exporters: [prometheusremotewrite]
        metrics/redis/argocd:
          receivers: [redis/argocd]
          processors: [resource/redis/argocd, batch]
          exporters: [prometheusremotewrite]
        metrics/redis/mastodon:
          receivers: [redis/mastodon]
          processors: [resource/redis/mastodon, batch]
          exporters: [prometheusremotewrite]
        metrics/mackerel:
          receivers: [otlp, prometheus]
          processors: [batch/mackerel]
          exporters: [otlp/mackerel]
        metrics/mackerel/haproxy:
          receivers: [haproxy]
          processors: [resource/haproxy, batch/mackerel]
          exporters: [otlp/mackerel]
        metrics/mackerel/nginx:
          receivers: [nginx]
          processors: [resource/nginx, batch/mackerel]
          exporters: [otlp/mackerel]
        metrics/mackerel/podman_stats:
          receivers: [podman_stats]
          processors: [resource/podman_stats, batch/mackerel]
          exporters: [otlp/mackerel]
        metrics/mackerel/redis/argocd:
          receivers: [redis/argocd]
          processors: [resource/redis/argocd, batch/mackerel]
          exporters: [otlp/mackerel]
        metrics/mackerel/redis/mastodon:
          receivers: [redis/mastodon]
          processors: [resource/redis/mastodon, batch/mackerel]
          exporters: [otlp/mackerel]
        traces/vaxila:
          receivers: [otlp]
          processors: [batch/vaxila]
          exporters: [otlphttp/vaxila]
  managementState: managed
  envFrom:
    - secretRef:
        name: argocd-redis-password
    - secretRef:
        name: mackerel-apikey
    - secretRef:
        name: vaxila-apikey
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.109.0
  ipFamilies:
    - IPv4
    - IPv6
  ipFamilyPolicy: RequireDualStack
  volumeMounts:
    - name: podman-socket
      mountPath: /run/podman/podman.sock
  volumes:
    - name: podman-socket
      hostPath:
        path: /run/podman/podman.sock
        type: Socket
